---
# Tasks for installing Elasticsearch for Centos host

## Tasks for include de package elasticsearch in the yum respos directory
- name: Add elastic repo
  yum_repository:
    name: elastic-7.x
    description: Elastic repository for 7.x packages
    baseurl: https://artifacts.elastic.co/packages/7.x/yum
    gpgcheck: yes
    gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch

# Install
- name: Installing ElasticSearch latest version
  yum:
    name: elasticsearch
    state: latest

# Configure the service with a default file or use one that de user provided in path_config
- name: Configuring ElasticSearch
  template:
    src: "{{ path_config }}"
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: root
    mode: 0644

# Configure the systemd service default timeout value
- name: Create a service drop-in configuration directory
  file:
    path: /etc/systemd/system/elasticsearch.service.d
    state: directory
    mode: 0755

- name: Configuring systemd service time out
  template:
    src: systemd.yml
    dest: /etc/systemd/system/elasticsearch.service.d/startup-timeout.conf
    owner: root
    group: root
    mode: 0644

- name: Reloading systemd daemon
  systemd:
    daemon_reload: yes

# Configure the service with systemd
- name: Service ElasticSearch enabled, unmasked, started
  systemd:
    name: elasticsearch
    enabled: yes
    masked: no
    state: started

# Start service, install plugins, create users
- name: Waiting response of the service
  service:
    name: elasticsearch
  register: service_post
  until: service_post.status.ActiveState == "active"
  retries: 60
  delay: 2

- name: Uninstalling plugins old version 
  shell: /usr/share/elasticsearch/bin/elasticsearch-plugin remove {{ item }}
  register: result
  failed_when: '"ERROR: plugin [{{ item }}] not found" not in result.stdout and "-> removing [{{ item }}]" not in result.stdout'
  loop: "{{ plugins | flatten(1) }}"

- name: Installing plugins new version
  shell: /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch {{ item }}
  loop: "{{ plugins | flatten(1) }}"

- name: Generating users 
  shell: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto -b
  register: users
  ignore_errors: yes
  tags: molecule-idempotence-notest

- debug:
    var: users.stdout_lines
  when: users.rc == 0
  tags: molecule-idempotence-notest

- name: Export generated users
  local_action: 
    module: copy
    content: "{{ users.stdout_lines }}"
    dest: /tmp/elasticUsers
  when: users.rc == 0
  tags: molecule-idempotence-notest

- name: Restarting service
  service:
    name: elasticsearch
    state: restarted
  when: users.rc == 0
  tags: molecule-idempotence-notest