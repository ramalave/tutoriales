input {
  beats {
    port => 5046
  }
}

filter {

       json {
         source => "message"
         skip_on_invalid_json => true
       }

       if "_jsonparsefailure" not in [tags]{
           date {
             match => [ "[message][timestamp]", "yyyy-MM-dd HH:mm:ss.SSS" ]
             timezone => "America/Montevideo"
             target => "@timestamp"
          }

          grok {
            patterns_dir => ["/etc/logstash/patterns/"]
            break_on_match => true
            match => { "message" => "%{IP:client} - - %{GREEDYDATA} \"(%{WORD:access.method}) %{URIPATHPARAM:access.uri} %{GREEDYDATA:access.protocol}\" %{NUMBER:access.status} %{CONTENTLENGTH:access.content-length} %{NUMBER:access.port} %{NUMBER:access.duration:int} ms"}
            add_tag => [ "access_log" ]
          }

          grok {
            patterns_dir => ["/etc/logstash/patterns/"]
            match => { "message" => "END \(idTransaction=%{WORD:transaction.id}, idEnvironment=%{NUMBER:transaction.environment}, idUser=%{USER:transaction.user}, idActivity=%{ACTIVITY:transaction.activity}, channel=%{CHANNEL:transaction.channel}, clientIP=%{IP:client}, totalAmount=%{NUMBER:transaction.amount}, returnCode=%{WORD:transaction.return_code}\) - Tiempo total de ejecucion %{NUMBER:transaction.duration}" }
            add_tag => [ "transaction" ]
            remove_tag => [ "_grokparsefailure" ]
          }

          if "_grokparsefailure" not in [tags]{
            geoip {
                source => "client"
            }

            if "transaction" in [tags]{
                if "$$!!ANON!!$$" in [user] {
                    mutate {
                        add_field => [ "anonymous" , "true" ]
                    }
                } else {
                    mutate {
                        add_field => [ "anonymous" , "false" ]
                    }
                }
                mutate {
                    convert => {
                        "amount" => "float"
                        "anonymous" => "boolean"
                        "duration" => "integer"
                        "environment" => "integer"
                    }
                }
            }
          }
       }
}

output {
    if [kubernetes][namespace] == "digital-demo" {
        elasticsearch {
            hosts => ["172.20.16.5:9200"]
            index => "cpd-digital-demo-%{+YYYY.MM.dd}"
            user => '${USER}'
            password => '${PASS}'
        }
    } else {
        elasticsearch {
            hosts => ["172.20.16.5:9200"]
            index => "other-services-demo-%{+YYYY.MM.dd}"
            user => '${USER}'
            password => '${PASS}'
        }
    }
}
